% top-level definitions go into systemdict
/#! {{currentfile 128 string readline exch pop {exit} if} loop} bind def
/# /#! load def  % also enable # comments
/.silent -112 def  % gs_error_silent in base/gserrors.h

/forthdict 1024 dict def
forthdict begin
  % add some helpful words from FORTH, starting with `words`
  /dictwords {  % dict -
    % print to stdout all the words (keys) in the dictionary
    {pop cvx ==only ( ) =only} forall () =
  } bind def
  /words {  % -
    % print to stdout all words from all dictionaries, like FORTH
    countdictstack array dictstack {dictwords} forall
  } bind def
end  % forthdict

/casperdict 1024 dict def
casperdict begin
  % add some generally useful words without polluting systemdict
  /topdown {  % -
    % changes behavior of interpreter to allow topdown design
    % instead of causing /undefined errors, lets you run program at every
    % phase of development, showing a placeholder for undefined words.
    errordict begin
      /undefined {
        (\(/) print =only ( not yet defined\) ) print
      } bind def
    end
  } bind def
  /alias {  % /currentname /newname -
    % alias currentname to newname
    exch load def
  } bind def
  /strlen {  % anystring - strlen  % length to first null (\000)
    % if no nulls, entire length of string (same as `length`)
    (\000) search {3 1 roll pop pop length} {length} ifelse
  } bind def
  /stradd {  % string1 string2 - combined
    % add (concatenate) two strings
    2 copy strlen exch strlen add string  % make new empty string
    dup 4 3 roll exch copy  % new string contains string1
    strlen  % length of string1 again, for putinterval
    3 1 roll dup  % need extra copy of combined string
    4 2 roll putinterval  % combined string remains at TOS
  } bind def
  /add /*add alias  % save `add` in `*add`
  /add {  % redefine add to include stradd
    1 index type /stringtype cvx eq  % if first arg is string, use stradd
    {stradd} {*add} ifelse
  } bind def
  /add /+ alias  % allow use of `+` for `add`
end  % casperdict

/casper {  % -
  % initialize for programming with casper extensions
  % first copy above dictionaries into userdict
  forthdict userdict copy casperdict exch copy pop
  % now enable top-down programming method
  topdown
} bind def
% vim: tabstop=8 shiftwidth=2 expandtab softtabstop=2
